Index: src/main/java/view/PyramidView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\n\r\nimport model.Card;\r\nimport model.PyramidModel;\r\n\r\npublic class PyramidView {\r\n    private final JFrame frame = new JFrame(\"Pyramid Card Game\");\r\n    private final JPanel pyramidPanel = new JPanel();\r\n    private final JPanel rightPanel = new JPanel();\r\n    private final JButton activeCardButton = new JButton(\"Carta activa\");\r\n    private final JButton auxDeckButton = crearMazoAuxiliarButton();\r\n    private final JButton jokerButton = crearJokerButton();\r\n    private final JButton restartButton = new JButton(\"Restart\");\r\n    private final Dimension cardDimension = new Dimension(60, 100);\r\n    private final JPanel startMenuPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 20, 20)); // Cambio aquí\r\n    private final JButton startButton = new JButton(\"Iniciar Juego\");\r\n    private final JButton exitButton = new JButton(\"Salir\");\r\n    private final JButton exitGameButton = new JButton(\"Salir del Juego\");\r\n    private final Image backgroundImage = new ImageIcon(\"assets/fondo5.jpg\").getImage();\r\n    private final BackgroundPanel backgroundPanel = new BackgroundPanel(backgroundImage);\r\n\r\n\r\n    private static PyramidView instance;\r\n\r\n    private PyramidView() {\r\n        setupFrame();\r\n        setupBackground();\r\n        setupStartMenu();\r\n        setupPyramidPanel();\r\n        setupRightPanel();\r\n        setupInitialVisibility();\r\n\r\n\r\n    }\r\n\r\n    private void setupFrame() {\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.setSize(1280, 1024);            // Mantén tamaño fijo\r\n        frame.setLayout(new BorderLayout());\r\n        frame.setLocationRelativeTo(null);  // Centrar ventana\r\n    }\r\n\r\n    private void setupBackground() {\r\n        ImageIcon bgIcon = new ImageIcon(\"assets/fondo5.jpg\");\r\n        BackgroundPanel backgroundPanel = new BackgroundPanel(bgIcon.getImage());\r\n        backgroundPanel.setLayout(new GridBagLayout());  // Para centrar el startMenuPanel\r\n\r\n        // Configuramos startMenuPanel con un BoxLayout vertical\r\n        startMenuPanel.setLayout(new BoxLayout(startMenuPanel, BoxLayout.Y_AXIS));\r\n        startMenuPanel.setOpaque(true);\r\n        startMenuPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));\r\n\r\n        // Botones centrados\r\n        startButton.setAlignmentX(Component.CENTER_ALIGNMENT);\r\n        exitButton.setAlignmentX(Component.CENTER_ALIGNMENT);\r\n        startButton.setEnabled(true);\r\n        exitButton.setEnabled(true);\r\n\r\n        backgroundPanel.add(startMenuPanel);\r\n\r\n        frame.setContentPane(backgroundPanel);\r\n        frame.setVisible(true);\r\n    }\r\n\r\n    private void setupStartMenu() {\r\n        startMenuPanel.setPreferredSize(new Dimension(300, 200));\r\n        startMenuPanel.setOpaque(false);\r\n\r\n        // Ajustar tamaño preferido para botones para que se vean bien\r\n        Dimension btnSize = new Dimension(120, 40);\r\n        startButton.setPreferredSize(btnSize);\r\n        exitButton.setPreferredSize(btnSize);\r\n\r\n        startMenuPanel.add(Box.createRigidArea(new Dimension(0, 20))); // Espacio vertical entre botones\r\n        startMenuPanel.add(startButton);\r\n        startMenuPanel.add(Box.createRigidArea(new Dimension(0, 20))); // Espacio vertical entre botones\r\n        startMenuPanel.add(exitButton);\r\n    }\r\n\r\n    private void setupPyramidPanel() {\r\n        pyramidPanel.setLayout(new BoxLayout(pyramidPanel, BoxLayout.Y_AXIS));\r\n        pyramidPanel.setOpaque(false);\r\n        pyramidPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 40));\r\n    }\r\n\r\n    private void setupRightPanel() {\r\n        rightPanel.setLayout(new GridBagLayout());\r\n        GridBagConstraints gbc = new GridBagConstraints();\r\n\r\n        gbc.gridx = 0;\r\n        gbc.fill = GridBagConstraints.HORIZONTAL;\r\n        gbc.insets = new Insets(10, 0, 10, 0);\r\n\r\n        gbc.gridy = 0;\r\n        rightPanel.add(auxDeckButton, gbc);\r\n\r\n        gbc.gridy = 1;\r\n        gbc.insets = new Insets(10, 20, 10, 20);\r\n        rightPanel.add(activeCardButton, gbc);\r\n\r\n        gbc.gridy = 2;\r\n        gbc.insets = new Insets(10, 0, 10, 0);\r\n        rightPanel.add(jokerButton, gbc);\r\n\r\n        gbc.gridx = 0;\r\n        gbc.fill = GridBagConstraints.HORIZONTAL;\r\n        gbc.insets = new Insets(10, 0, 10, 0);\r\n\r\n        gbc.gridy = 3;\r\n        rightPanel.add(restartButton, gbc);\r\n\r\n        gbc.gridy = 4;\r\n        rightPanel.add(exitGameButton, gbc);\r\n\r\n        Dimension controlButtonSize = new Dimension(120, 40);\r\n        restartButton.setPreferredSize(controlButtonSize);\r\n        exitGameButton.setPreferredSize(controlButtonSize);\r\n\r\n\r\n        rightPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));\r\n        rightPanel.setOpaque(false);\r\n    }\r\n\r\n    private void setupInitialVisibility() {\r\n        activeCardButton.setVisible(false);\r\n        pyramidPanel.setVisible(false);\r\n        rightPanel.setVisible(false);\r\n        startMenuPanel.setVisible(true);\r\n\r\n        frame.setVisible(true);\r\n    }\r\n\r\n    public JFrame getFrame() {\r\n        return frame;\r\n    }\r\n\r\n    public JPanel getPyramidPanel() {\r\n        return pyramidPanel;\r\n    }\r\n\r\n    public JButton getAuxDeckButton() {\r\n        return auxDeckButton;\r\n    }\r\n\r\n    public JButton getActiveCardButton() {\r\n        return activeCardButton;\r\n    }\r\n\r\n    public JButton getStartButton() {\r\n        return startButton;\r\n    }\r\n\r\n    public JButton getExitButton() {\r\n        return exitButton;\r\n    }\r\n\r\n    public JButton getExitGameButton() {\r\n        return exitGameButton;\r\n    }\r\n\r\n    public JButton getJokerButton() {\r\n        return jokerButton;\r\n    }\r\n\r\n    public JButton getRestartButton() {\r\n        return restartButton;\r\n    }\r\n\r\n    public void showMessage(String message) {\r\n        JOptionPane.showMessageDialog(frame, message);\r\n    }\r\n\r\n    public JButton createCardButton(Card card) {\r\n        JButton button = new JButton(formatCardLabel(card)); // o lo que uses como texto\r\n        Dimension fixedSize = new Dimension(70, 90);\r\n        button.setPreferredSize(fixedSize);\r\n        button.setMinimumSize(fixedSize);\r\n        button.setMaximumSize(fixedSize);\r\n        return button;\r\n    }\r\n\r\n    public String formatCardLabel(Card card) {\r\n        StringBuilder symbols = new StringBuilder();\r\n        String valueStr = \"\";\r\n        if (card.getValue() < 11 && card.getValue() > 1) {\r\n            valueStr = String.valueOf(card.getValue());\r\n            for (int i = 0; i < card.getValue(); i++) {\r\n                symbols.append(card.getSuit()).append(\" \");\r\n            }\r\n        } else if (card.getValue() == 11) {\r\n            valueStr = \"\";\r\n            symbols.append(\"J\");\r\n            symbols.append(card.getSuit());\r\n        } else if (card.getValue() == 12) {\r\n            valueStr = \"\";\r\n            symbols.append(\"Q\");\r\n            symbols.append(card.getSuit());\r\n        } else if (card.getValue() == 13) {\r\n            valueStr = \"\";\r\n            symbols.append(\"K\");\r\n            symbols.append(card.getSuit());\r\n        } else if (card.getValue() == 1 || card.getValue() == 14) {\r\n            valueStr = \"\";\r\n            symbols.append(\"A\");\r\n            symbols.append(card.getSuit());\r\n        }\r\n        // Número en las esquinas superiores\r\n        return \"<html><div style='text-align:center;'>\"\r\n                + \"<div style='font-size:10px; display:flex; justify-content:space-between;'>\"\r\n                + \"<span>\" + valueStr  + \"</span></div>\"\r\n                + symbols.toString().trim() + \"</div>\"\r\n                + \"</div></html>\";\r\n    }\r\n\r\n    private JButton crearMazoAuxiliarButton() {\r\n        String label = \"<html><center>Mazo<br>Auxiliar</center></html>\";\r\n        JButton button = new JButton(label);\r\n        button.setPreferredSize(new Dimension(120, 40));\r\n        button.setOpaque(false);\r\n        return button;\r\n    }\r\n\r\n    private JButton crearJokerButton() {\r\n        //String label = \"<html><center>Joker</center></html>\";\r\n        //JButton button = new JButton(label);\r\n        JButton button = new JButton();\r\n\r\n        // Cargamos imagen del joker\r\n        ImageIcon jokerIcon = new ImageIcon(\"assets/jokerCards.jpeg\");\r\n        Image image = jokerIcon.getImage().getScaledInstance(60, 90, Image.SCALE_SMOOTH);\r\n        ImageIcon scaledIcon = new ImageIcon(image);\r\n        button.setIcon(scaledIcon);\r\n        button.setPreferredSize(new Dimension(60, 90));\r\n        button.setPreferredSize(new Dimension(60, 90));\r\n        button.setMaximumSize(new Dimension(60,90));\r\n        button.setOpaque(false);\r\n        button.setBorderPainted(false);\r\n        button.setContentAreaFilled(false);\r\n        button.setFocusPainted(false);\r\n        button.setOpaque(false);\r\n        return button;\r\n    }\r\n\r\n    public static PyramidView getInstance() {\r\n        if (instance == null) {\r\n            instance = new PyramidView();\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public void startGamePanel() {\r\n        backgroundPanel.removeAll();\r\n\r\n        JPanel pyramidWrapper = new JPanel(new BorderLayout());\r\n        pyramidWrapper.setOpaque(false);\r\n        pyramidWrapper.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 40));\r\n        pyramidWrapper.add(pyramidPanel, BorderLayout.CENTER);\r\n\r\n        rightPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));\r\n        rightPanel.setPreferredSize(new Dimension(220, 0));\r\n\r\n        JPanel gamePanel = new JPanel(new BorderLayout());\r\n        gamePanel.setOpaque(false);\r\n        gamePanel.add(pyramidWrapper, BorderLayout.CENTER);\r\n        gamePanel.add(rightPanel, BorderLayout.EAST);\r\n\r\n        startMenuPanel.setVisible(false);\r\n        pyramidPanel.setVisible(true);\r\n        rightPanel.setVisible(true);\r\n        activeCardButton.setVisible(false);\r\n        auxDeckButton.setVisible(true);\r\n        jokerButton.setVisible(true);\r\n        restartButton.setVisible(true);\r\n        exitGameButton.setVisible(true);\r\n\r\n        backgroundPanel.add(gamePanel, BorderLayout.CENTER);\r\n        frame.setContentPane(backgroundPanel);\r\n        frame.revalidate();\r\n        frame.repaint();\r\n    }\r\n\r\n    public JFrame getMainFrame() {\r\n        return frame;\r\n    }\r\n\r\n    public void showStartMenu() {\r\n        backgroundPanel.removeAll();\r\n\r\n        startMenuPanel.setVisible(true);\r\n        pyramidPanel.setVisible(false);\r\n        rightPanel.setVisible(false);\r\n        activeCardButton.setVisible(false);\r\n\r\n        backgroundPanel.add(startMenuPanel, BorderLayout.CENTER);\r\n        frame.setContentPane(backgroundPanel);\r\n        frame.revalidate();\r\n        frame.repaint();\r\n    }\r\n\r\n    public void setupGameView(PyramidModel model) {\r\n        JPanel pyramidPanel = getPyramidPanel();\r\n        pyramidPanel.removeAll();\r\n        pyramidPanel.revalidate();\r\n        pyramidPanel.repaint();\r\n    }\r\n\r\n    public JPanel getStartMenuPanel() {\r\n        return startMenuPanel;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/view/PyramidView.java b/src/main/java/view/PyramidView.java
--- a/src/main/java/view/PyramidView.java	(revision 8de2594e44ac5850d0a8a3767049587129fe661c)
+++ b/src/main/java/view/PyramidView.java	(date 1750267286768)
@@ -19,7 +19,7 @@
     private final JButton startButton = new JButton("Iniciar Juego");
     private final JButton exitButton = new JButton("Salir");
     private final JButton exitGameButton = new JButton("Salir del Juego");
-    private final Image backgroundImage = new ImageIcon("assets/fondo5.jpg").getImage();
+    private final Image backgroundImage = new ImageIcon("assets/fondo2.jpg").getImage();
     private final BackgroundPanel backgroundPanel = new BackgroundPanel(backgroundImage);
 
 
@@ -44,7 +44,7 @@
     }
 
     private void setupBackground() {
-        ImageIcon bgIcon = new ImageIcon("assets/fondo5.jpg");
+        ImageIcon bgIcon = new ImageIcon("assets/fondo3.jpg");
         BackgroundPanel backgroundPanel = new BackgroundPanel(bgIcon.getImage());
         backgroundPanel.setLayout(new GridBagLayout());  // Para centrar el startMenuPanel
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"temurin-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 8de2594e44ac5850d0a8a3767049587129fe661c)
+++ b/.idea/misc.xml	(date 1750267286767)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="temurin-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
